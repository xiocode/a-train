name: Continuous Delivery
on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # linux/amd64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          # linux/arm64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
          # linux/arm/v7
          - os: ubuntu-latest
            target: armv7-unknown-linux-musleabihf
          # linux/arm/v6
          - os: ubuntu-latest
            target: arm-unknown-linux-musleabihf
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      # With each cache weighing in at ~500MB per target,
      # and this repository maxing out at 5GB of caches,
      # it might make sense not to cache dependencies.
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v1

      - name: Install Rust Cross
        run: cargo install cross

      - name: Run dist
        run: cargo xtask dist ${{ matrix.target }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.target }}
          path: ./target/dist/
          if-no-files-found: error
          retention-days: 7

  docker:
    name: Build Docker image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # linux/amd64
      - uses: actions/download-artifact@v2
        with:
          name: x86_64-unknown-linux-musl
          path: target/dist
      
      # linux/arm64
      - uses: actions/download-artifact@v2
        with:
          name: aarch64-unknown-linux-musl
          path: target/dist

      # linux/arm/v7
      - uses: actions/download-artifact@v2
        with:
          name: armv7-unknown-linux-musleabihf
          path: target/dist

      # linux/arm/v6
      - uses: actions/download-artifact@v2
        with:
          name: arm-unknown-linux-musleabihf
          path: target/dist

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: target/dist

      - name: Build and push
        run: cargo xtask docker build --push